// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: llbuild3/EngineInternal.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_llbuild3_2fEngineInternal_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_llbuild3_2fEngineInternal_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "llbuild3/Engine.pb.h"
#include "llbuild3/Label.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_llbuild3_2fEngineInternal_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_llbuild3_2fEngineInternal_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_llbuild3_2fEngineInternal_2eproto;
namespace llbuild3 {
class TaskActionRequest;
struct TaskActionRequestDefaultTypeInternal;
extern TaskActionRequestDefaultTypeInternal _TaskActionRequest_default_instance_;
class TaskArtifactRequest;
struct TaskArtifactRequestDefaultTypeInternal;
extern TaskArtifactRequestDefaultTypeInternal _TaskArtifactRequest_default_instance_;
class TaskRequest;
struct TaskRequestDefaultTypeInternal;
extern TaskRequestDefaultTypeInternal _TaskRequest_default_instance_;
class TaskRuleRequest;
struct TaskRuleRequestDefaultTypeInternal;
extern TaskRuleRequestDefaultTypeInternal _TaskRuleRequest_default_instance_;
class TaskTransitionKey;
struct TaskTransitionKeyDefaultTypeInternal;
extern TaskTransitionKeyDefaultTypeInternal _TaskTransitionKey_default_instance_;
class TaskTransitionValue;
struct TaskTransitionValueDefaultTypeInternal;
extern TaskTransitionValueDefaultTypeInternal _TaskTransitionValue_default_instance_;
}  // namespace llbuild3
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace llbuild3 {

// ===================================================================


// -------------------------------------------------------------------

class TaskActionRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:llbuild3.TaskActionRequest) */ {
 public:
  inline TaskActionRequest() : TaskActionRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskActionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskActionRequest(const TaskActionRequest& from) : TaskActionRequest(nullptr, from) {}
  inline TaskActionRequest(TaskActionRequest&& from) noexcept
      : TaskActionRequest(nullptr, std::move(from)) {}
  inline TaskActionRequest& operator=(const TaskActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskActionRequest& operator=(TaskActionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskActionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskActionRequest* internal_default_instance() {
    return reinterpret_cast<const TaskActionRequest*>(
        &_TaskActionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TaskActionRequest& a, TaskActionRequest& b) { a.Swap(&b); }
  inline void Swap(TaskActionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskActionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskActionRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<TaskActionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TaskActionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TaskActionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "llbuild3.TaskActionRequest"; }

 protected:
  explicit TaskActionRequest(::google::protobuf::Arena* arena);
  TaskActionRequest(::google::protobuf::Arena* arena, const TaskActionRequest& from);
  TaskActionRequest(::google::protobuf::Arena* arena, TaskActionRequest&& from) noexcept
      : TaskActionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:llbuild3.TaskActionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TaskActionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskActionRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_llbuild3_2fEngineInternal_2eproto;
};
// -------------------------------------------------------------------

class TaskRuleRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:llbuild3.TaskRuleRequest) */ {
 public:
  inline TaskRuleRequest() : TaskRuleRequest(nullptr) {}
  ~TaskRuleRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskRuleRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskRuleRequest(const TaskRuleRequest& from) : TaskRuleRequest(nullptr, from) {}
  inline TaskRuleRequest(TaskRuleRequest&& from) noexcept
      : TaskRuleRequest(nullptr, std::move(from)) {}
  inline TaskRuleRequest& operator=(const TaskRuleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskRuleRequest& operator=(TaskRuleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskRuleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskRuleRequest* internal_default_instance() {
    return reinterpret_cast<const TaskRuleRequest*>(
        &_TaskRuleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TaskRuleRequest& a, TaskRuleRequest& b) { a.Swap(&b); }
  inline void Swap(TaskRuleRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskRuleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskRuleRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TaskRuleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskRuleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskRuleRequest& from) { TaskRuleRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TaskRuleRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "llbuild3.TaskRuleRequest"; }

 protected:
  explicit TaskRuleRequest(::google::protobuf::Arena* arena);
  TaskRuleRequest(::google::protobuf::Arena* arena, const TaskRuleRequest& from);
  TaskRuleRequest(::google::protobuf::Arena* arena, TaskRuleRequest&& from) noexcept
      : TaskRuleRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelFieldNumber = 1,
  };
  // .llbuild3.Label label = 1;
  bool has_label() const;
  void clear_label() ;
  const ::llbuild3::Label& label() const;
  PROTOBUF_NODISCARD ::llbuild3::Label* release_label();
  ::llbuild3::Label* mutable_label();
  void set_allocated_label(::llbuild3::Label* value);
  void unsafe_arena_set_allocated_label(::llbuild3::Label* value);
  ::llbuild3::Label* unsafe_arena_release_label();

  private:
  const ::llbuild3::Label& _internal_label() const;
  ::llbuild3::Label* _internal_mutable_label();

  public:
  // @@protoc_insertion_point(class_scope:llbuild3.TaskRuleRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TaskRuleRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskRuleRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::llbuild3::Label* label_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llbuild3_2fEngineInternal_2eproto;
};
// -------------------------------------------------------------------

class TaskArtifactRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:llbuild3.TaskArtifactRequest) */ {
 public:
  inline TaskArtifactRequest() : TaskArtifactRequest(nullptr) {}
  ~TaskArtifactRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskArtifactRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskArtifactRequest(const TaskArtifactRequest& from) : TaskArtifactRequest(nullptr, from) {}
  inline TaskArtifactRequest(TaskArtifactRequest&& from) noexcept
      : TaskArtifactRequest(nullptr, std::move(from)) {}
  inline TaskArtifactRequest& operator=(const TaskArtifactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskArtifactRequest& operator=(TaskArtifactRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskArtifactRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskArtifactRequest* internal_default_instance() {
    return reinterpret_cast<const TaskArtifactRequest*>(
        &_TaskArtifactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(TaskArtifactRequest& a, TaskArtifactRequest& b) { a.Swap(&b); }
  inline void Swap(TaskArtifactRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskArtifactRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskArtifactRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TaskArtifactRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskArtifactRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskArtifactRequest& from) { TaskArtifactRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TaskArtifactRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "llbuild3.TaskArtifactRequest"; }

 protected:
  explicit TaskArtifactRequest(::google::protobuf::Arena* arena);
  TaskArtifactRequest(::google::protobuf::Arena* arena, const TaskArtifactRequest& from);
  TaskArtifactRequest(::google::protobuf::Arena* arena, TaskArtifactRequest&& from) noexcept
      : TaskArtifactRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelFieldNumber = 1,
  };
  // .llbuild3.Label label = 1;
  bool has_label() const;
  void clear_label() ;
  const ::llbuild3::Label& label() const;
  PROTOBUF_NODISCARD ::llbuild3::Label* release_label();
  ::llbuild3::Label* mutable_label();
  void set_allocated_label(::llbuild3::Label* value);
  void unsafe_arena_set_allocated_label(::llbuild3::Label* value);
  ::llbuild3::Label* unsafe_arena_release_label();

  private:
  const ::llbuild3::Label& _internal_label() const;
  ::llbuild3::Label* _internal_mutable_label();

  public:
  // @@protoc_insertion_point(class_scope:llbuild3.TaskArtifactRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TaskArtifactRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskArtifactRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::llbuild3::Label* label_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llbuild3_2fEngineInternal_2eproto;
};
// -------------------------------------------------------------------

class TaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:llbuild3.TaskRequest) */ {
 public:
  inline TaskRequest() : TaskRequest(nullptr) {}
  ~TaskRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskRequest(const TaskRequest& from) : TaskRequest(nullptr, from) {}
  inline TaskRequest(TaskRequest&& from) noexcept
      : TaskRequest(nullptr, std::move(from)) {}
  inline TaskRequest& operator=(const TaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskRequest& operator=(TaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskRequest& default_instance() {
    return *internal_default_instance();
  }
  enum DetailsCase {
    kArtifact = 2,
    kRule = 3,
    kAction = 4,
    DETAILS_NOT_SET = 0,
  };
  static inline const TaskRequest* internal_default_instance() {
    return reinterpret_cast<const TaskRequest*>(
        &_TaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(TaskRequest& a, TaskRequest& b) { a.Swap(&b); }
  inline void Swap(TaskRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskRequest& from) { TaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TaskRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "llbuild3.TaskRequest"; }

 protected:
  explicit TaskRequest(::google::protobuf::Arena* arena);
  TaskRequest(::google::protobuf::Arena* arena, const TaskRequest& from);
  TaskRequest(::google::protobuf::Arena* arena, TaskRequest&& from) noexcept
      : TaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kArtifactFieldNumber = 2,
    kRuleFieldNumber = 3,
    kActionFieldNumber = 4,
  };
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // .llbuild3.TaskArtifactRequest artifact = 2;
  bool has_artifact() const;
  private:
  bool _internal_has_artifact() const;

  public:
  void clear_artifact() ;
  const ::llbuild3::TaskArtifactRequest& artifact() const;
  PROTOBUF_NODISCARD ::llbuild3::TaskArtifactRequest* release_artifact();
  ::llbuild3::TaskArtifactRequest* mutable_artifact();
  void set_allocated_artifact(::llbuild3::TaskArtifactRequest* value);
  void unsafe_arena_set_allocated_artifact(::llbuild3::TaskArtifactRequest* value);
  ::llbuild3::TaskArtifactRequest* unsafe_arena_release_artifact();

  private:
  const ::llbuild3::TaskArtifactRequest& _internal_artifact() const;
  ::llbuild3::TaskArtifactRequest* _internal_mutable_artifact();

  public:
  // .llbuild3.TaskRuleRequest rule = 3;
  bool has_rule() const;
  private:
  bool _internal_has_rule() const;

  public:
  void clear_rule() ;
  const ::llbuild3::TaskRuleRequest& rule() const;
  PROTOBUF_NODISCARD ::llbuild3::TaskRuleRequest* release_rule();
  ::llbuild3::TaskRuleRequest* mutable_rule();
  void set_allocated_rule(::llbuild3::TaskRuleRequest* value);
  void unsafe_arena_set_allocated_rule(::llbuild3::TaskRuleRequest* value);
  ::llbuild3::TaskRuleRequest* unsafe_arena_release_rule();

  private:
  const ::llbuild3::TaskRuleRequest& _internal_rule() const;
  ::llbuild3::TaskRuleRequest* _internal_mutable_rule();

  public:
  // .llbuild3.TaskActionRequest action = 4;
  bool has_action() const;
  private:
  bool _internal_has_action() const;

  public:
  void clear_action() ;
  const ::llbuild3::TaskActionRequest& action() const;
  PROTOBUF_NODISCARD ::llbuild3::TaskActionRequest* release_action();
  ::llbuild3::TaskActionRequest* mutable_action();
  void set_allocated_action(::llbuild3::TaskActionRequest* value);
  void unsafe_arena_set_allocated_action(::llbuild3::TaskActionRequest* value);
  ::llbuild3::TaskActionRequest* unsafe_arena_release_action();

  private:
  const ::llbuild3::TaskActionRequest& _internal_action() const;
  ::llbuild3::TaskActionRequest* _internal_mutable_action();

  public:
  void clear_details();
  DetailsCase details_case() const;
  // @@protoc_insertion_point(class_scope:llbuild3.TaskRequest)
 private:
  class _Internal;
  void set_has_artifact();
  void set_has_rule();
  void set_has_action();
  inline bool has_details() const;
  inline void clear_has_details();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TaskRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskRequest& from_msg);
    ::uint64_t id_;
    union DetailsUnion {
      constexpr DetailsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::llbuild3::TaskArtifactRequest* artifact_;
      ::llbuild3::TaskRuleRequest* rule_;
      ::llbuild3::TaskActionRequest* action_;
    } details_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llbuild3_2fEngineInternal_2eproto;
};
// -------------------------------------------------------------------

class TaskTransitionValue final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:llbuild3.TaskTransitionValue) */ {
 public:
  inline TaskTransitionValue() : TaskTransitionValue(nullptr) {}
  ~TaskTransitionValue() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskTransitionValue(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskTransitionValue(const TaskTransitionValue& from) : TaskTransitionValue(nullptr, from) {}
  inline TaskTransitionValue(TaskTransitionValue&& from) noexcept
      : TaskTransitionValue(nullptr, std::move(from)) {}
  inline TaskTransitionValue& operator=(const TaskTransitionValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskTransitionValue& operator=(TaskTransitionValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskTransitionValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskTransitionValue* internal_default_instance() {
    return reinterpret_cast<const TaskTransitionValue*>(
        &_TaskTransitionValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(TaskTransitionValue& a, TaskTransitionValue& b) { a.Swap(&b); }
  inline void Swap(TaskTransitionValue* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskTransitionValue* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskTransitionValue* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TaskTransitionValue>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskTransitionValue& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskTransitionValue& from) { TaskTransitionValue::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TaskTransitionValue* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "llbuild3.TaskTransitionValue"; }

 protected:
  explicit TaskTransitionValue(::google::protobuf::Arena* arena);
  TaskTransitionValue(::google::protobuf::Arena* arena, const TaskTransitionValue& from);
  TaskTransitionValue(::google::protobuf::Arena* arena, TaskTransitionValue&& from) noexcept
      : TaskTransitionValue(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestsFieldNumber = 2,
    kStateFieldNumber = 1,
  };
  // repeated .llbuild3.TaskRequest requests = 2;
  int requests_size() const;
  private:
  int _internal_requests_size() const;

  public:
  void clear_requests() ;
  ::llbuild3::TaskRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>* mutable_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>& _internal_requests() const;
  ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>* _internal_mutable_requests();
  public:
  const ::llbuild3::TaskRequest& requests(int index) const;
  ::llbuild3::TaskRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>& requests() const;
  // .llbuild3.TaskNextState state = 1;
  bool has_state() const;
  void clear_state() ;
  const ::llbuild3::TaskNextState& state() const;
  PROTOBUF_NODISCARD ::llbuild3::TaskNextState* release_state();
  ::llbuild3::TaskNextState* mutable_state();
  void set_allocated_state(::llbuild3::TaskNextState* value);
  void unsafe_arena_set_allocated_state(::llbuild3::TaskNextState* value);
  ::llbuild3::TaskNextState* unsafe_arena_release_state();

  private:
  const ::llbuild3::TaskNextState& _internal_state() const;
  ::llbuild3::TaskNextState* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:llbuild3.TaskTransitionValue)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TaskTransitionValue_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskTransitionValue& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::llbuild3::TaskRequest > requests_;
    ::llbuild3::TaskNextState* state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llbuild3_2fEngineInternal_2eproto;
};
// -------------------------------------------------------------------

class TaskTransitionKey final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:llbuild3.TaskTransitionKey) */ {
 public:
  inline TaskTransitionKey() : TaskTransitionKey(nullptr) {}
  ~TaskTransitionKey() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskTransitionKey(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskTransitionKey(const TaskTransitionKey& from) : TaskTransitionKey(nullptr, from) {}
  inline TaskTransitionKey(TaskTransitionKey&& from) noexcept
      : TaskTransitionKey(nullptr, std::move(from)) {}
  inline TaskTransitionKey& operator=(const TaskTransitionKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskTransitionKey& operator=(TaskTransitionKey&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskTransitionKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskTransitionKey* internal_default_instance() {
    return reinterpret_cast<const TaskTransitionKey*>(
        &_TaskTransitionKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(TaskTransitionKey& a, TaskTransitionKey& b) { a.Swap(&b); }
  inline void Swap(TaskTransitionKey* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskTransitionKey* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskTransitionKey* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TaskTransitionKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskTransitionKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskTransitionKey& from) { TaskTransitionKey::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TaskTransitionKey* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "llbuild3.TaskTransitionKey"; }

 protected:
  explicit TaskTransitionKey(::google::protobuf::Arena* arena);
  TaskTransitionKey(::google::protobuf::Arena* arena, const TaskTransitionKey& from);
  TaskTransitionKey(::google::protobuf::Arena* arena, TaskTransitionKey&& from) noexcept
      : TaskTransitionKey(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCtxFieldNumber = 1,
    kSignatureFieldNumber = 2,
    kInputsFieldNumber = 3,
  };
  // .llbuild3.TaskContext ctx = 1;
  bool has_ctx() const;
  void clear_ctx() ;
  const ::llbuild3::TaskContext& ctx() const;
  PROTOBUF_NODISCARD ::llbuild3::TaskContext* release_ctx();
  ::llbuild3::TaskContext* mutable_ctx();
  void set_allocated_ctx(::llbuild3::TaskContext* value);
  void unsafe_arena_set_allocated_ctx(::llbuild3::TaskContext* value);
  ::llbuild3::TaskContext* unsafe_arena_release_ctx();

  private:
  const ::llbuild3::TaskContext& _internal_ctx() const;
  ::llbuild3::TaskContext* _internal_mutable_ctx();

  public:
  // .llbuild3.Signature signature = 2;
  bool has_signature() const;
  void clear_signature() ;
  const ::llbuild3::Signature& signature() const;
  PROTOBUF_NODISCARD ::llbuild3::Signature* release_signature();
  ::llbuild3::Signature* mutable_signature();
  void set_allocated_signature(::llbuild3::Signature* value);
  void unsafe_arena_set_allocated_signature(::llbuild3::Signature* value);
  ::llbuild3::Signature* unsafe_arena_release_signature();

  private:
  const ::llbuild3::Signature& _internal_signature() const;
  ::llbuild3::Signature* _internal_mutable_signature();

  public:
  // .llbuild3.TaskInputs inputs = 3;
  bool has_inputs() const;
  void clear_inputs() ;
  const ::llbuild3::TaskInputs& inputs() const;
  PROTOBUF_NODISCARD ::llbuild3::TaskInputs* release_inputs();
  ::llbuild3::TaskInputs* mutable_inputs();
  void set_allocated_inputs(::llbuild3::TaskInputs* value);
  void unsafe_arena_set_allocated_inputs(::llbuild3::TaskInputs* value);
  ::llbuild3::TaskInputs* unsafe_arena_release_inputs();

  private:
  const ::llbuild3::TaskInputs& _internal_inputs() const;
  ::llbuild3::TaskInputs* _internal_mutable_inputs();

  public:
  // @@protoc_insertion_point(class_scope:llbuild3.TaskTransitionKey)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TaskTransitionKey_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskTransitionKey& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::llbuild3::TaskContext* ctx_;
    ::llbuild3::Signature* signature_;
    ::llbuild3::TaskInputs* inputs_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_llbuild3_2fEngineInternal_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// TaskArtifactRequest

// .llbuild3.Label label = 1;
inline bool TaskArtifactRequest::has_label() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.label_ != nullptr);
  return value;
}
inline const ::llbuild3::Label& TaskArtifactRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::llbuild3::Label* p = _impl_.label_;
  return p != nullptr ? *p : reinterpret_cast<const ::llbuild3::Label&>(::llbuild3::_Label_default_instance_);
}
inline const ::llbuild3::Label& TaskArtifactRequest::label() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskArtifactRequest.label)
  return _internal_label();
}
inline void TaskArtifactRequest::unsafe_arena_set_allocated_label(::llbuild3::Label* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.label_);
  }
  _impl_.label_ = reinterpret_cast<::llbuild3::Label*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskArtifactRequest.label)
}
inline ::llbuild3::Label* TaskArtifactRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::Label* released = _impl_.label_;
  _impl_.label_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::llbuild3::Label* TaskArtifactRequest::unsafe_arena_release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:llbuild3.TaskArtifactRequest.label)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::Label* temp = _impl_.label_;
  _impl_.label_ = nullptr;
  return temp;
}
inline ::llbuild3::Label* TaskArtifactRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.label_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::llbuild3::Label>(GetArena());
    _impl_.label_ = reinterpret_cast<::llbuild3::Label*>(p);
  }
  return _impl_.label_;
}
inline ::llbuild3::Label* TaskArtifactRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::llbuild3::Label* _msg = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskArtifactRequest.label)
  return _msg;
}
inline void TaskArtifactRequest::set_allocated_label(::llbuild3::Label* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.label_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.label_ = reinterpret_cast<::llbuild3::Label*>(value);
  // @@protoc_insertion_point(field_set_allocated:llbuild3.TaskArtifactRequest.label)
}

// -------------------------------------------------------------------

// TaskRuleRequest

// .llbuild3.Label label = 1;
inline bool TaskRuleRequest::has_label() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.label_ != nullptr);
  return value;
}
inline const ::llbuild3::Label& TaskRuleRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::llbuild3::Label* p = _impl_.label_;
  return p != nullptr ? *p : reinterpret_cast<const ::llbuild3::Label&>(::llbuild3::_Label_default_instance_);
}
inline const ::llbuild3::Label& TaskRuleRequest::label() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskRuleRequest.label)
  return _internal_label();
}
inline void TaskRuleRequest::unsafe_arena_set_allocated_label(::llbuild3::Label* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.label_);
  }
  _impl_.label_ = reinterpret_cast<::llbuild3::Label*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskRuleRequest.label)
}
inline ::llbuild3::Label* TaskRuleRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::Label* released = _impl_.label_;
  _impl_.label_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::llbuild3::Label* TaskRuleRequest::unsafe_arena_release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:llbuild3.TaskRuleRequest.label)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::Label* temp = _impl_.label_;
  _impl_.label_ = nullptr;
  return temp;
}
inline ::llbuild3::Label* TaskRuleRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.label_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::llbuild3::Label>(GetArena());
    _impl_.label_ = reinterpret_cast<::llbuild3::Label*>(p);
  }
  return _impl_.label_;
}
inline ::llbuild3::Label* TaskRuleRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::llbuild3::Label* _msg = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskRuleRequest.label)
  return _msg;
}
inline void TaskRuleRequest::set_allocated_label(::llbuild3::Label* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.label_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.label_ = reinterpret_cast<::llbuild3::Label*>(value);
  // @@protoc_insertion_point(field_set_allocated:llbuild3.TaskRuleRequest.label)
}

// -------------------------------------------------------------------

// TaskActionRequest

// -------------------------------------------------------------------

// TaskRequest

// uint64 id = 1;
inline void TaskRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t TaskRequest::id() const {
  // @@protoc_insertion_point(field_get:llbuild3.TaskRequest.id)
  return _internal_id();
}
inline void TaskRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:llbuild3.TaskRequest.id)
}
inline ::uint64_t TaskRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void TaskRequest::_internal_set_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .llbuild3.TaskArtifactRequest artifact = 2;
inline bool TaskRequest::has_artifact() const {
  return details_case() == kArtifact;
}
inline bool TaskRequest::_internal_has_artifact() const {
  return details_case() == kArtifact;
}
inline void TaskRequest::set_has_artifact() {
  _impl_._oneof_case_[0] = kArtifact;
}
inline void TaskRequest::clear_artifact() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (details_case() == kArtifact) {
    if (GetArena() == nullptr) {
      delete _impl_.details_.artifact_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.details_.artifact_);
    }
    clear_has_details();
  }
}
inline ::llbuild3::TaskArtifactRequest* TaskRequest::release_artifact() {
  // @@protoc_insertion_point(field_release:llbuild3.TaskRequest.artifact)
  if (details_case() == kArtifact) {
    clear_has_details();
    auto* temp = _impl_.details_.artifact_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.details_.artifact_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::llbuild3::TaskArtifactRequest& TaskRequest::_internal_artifact() const {
  return details_case() == kArtifact ? *_impl_.details_.artifact_ : reinterpret_cast<::llbuild3::TaskArtifactRequest&>(::llbuild3::_TaskArtifactRequest_default_instance_);
}
inline const ::llbuild3::TaskArtifactRequest& TaskRequest::artifact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskRequest.artifact)
  return _internal_artifact();
}
inline ::llbuild3::TaskArtifactRequest* TaskRequest::unsafe_arena_release_artifact() {
  // @@protoc_insertion_point(field_unsafe_arena_release:llbuild3.TaskRequest.artifact)
  if (details_case() == kArtifact) {
    clear_has_details();
    auto* temp = _impl_.details_.artifact_;
    _impl_.details_.artifact_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TaskRequest::unsafe_arena_set_allocated_artifact(::llbuild3::TaskArtifactRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_details();
  if (value) {
    set_has_artifact();
    _impl_.details_.artifact_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskRequest.artifact)
}
inline ::llbuild3::TaskArtifactRequest* TaskRequest::_internal_mutable_artifact() {
  if (details_case() != kArtifact) {
    clear_details();
    set_has_artifact();
    _impl_.details_.artifact_ =
        ::google::protobuf::Message::DefaultConstruct<::llbuild3::TaskArtifactRequest>(GetArena());
  }
  return _impl_.details_.artifact_;
}
inline ::llbuild3::TaskArtifactRequest* TaskRequest::mutable_artifact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::llbuild3::TaskArtifactRequest* _msg = _internal_mutable_artifact();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskRequest.artifact)
  return _msg;
}

// .llbuild3.TaskRuleRequest rule = 3;
inline bool TaskRequest::has_rule() const {
  return details_case() == kRule;
}
inline bool TaskRequest::_internal_has_rule() const {
  return details_case() == kRule;
}
inline void TaskRequest::set_has_rule() {
  _impl_._oneof_case_[0] = kRule;
}
inline void TaskRequest::clear_rule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (details_case() == kRule) {
    if (GetArena() == nullptr) {
      delete _impl_.details_.rule_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.details_.rule_);
    }
    clear_has_details();
  }
}
inline ::llbuild3::TaskRuleRequest* TaskRequest::release_rule() {
  // @@protoc_insertion_point(field_release:llbuild3.TaskRequest.rule)
  if (details_case() == kRule) {
    clear_has_details();
    auto* temp = _impl_.details_.rule_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.details_.rule_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::llbuild3::TaskRuleRequest& TaskRequest::_internal_rule() const {
  return details_case() == kRule ? *_impl_.details_.rule_ : reinterpret_cast<::llbuild3::TaskRuleRequest&>(::llbuild3::_TaskRuleRequest_default_instance_);
}
inline const ::llbuild3::TaskRuleRequest& TaskRequest::rule() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskRequest.rule)
  return _internal_rule();
}
inline ::llbuild3::TaskRuleRequest* TaskRequest::unsafe_arena_release_rule() {
  // @@protoc_insertion_point(field_unsafe_arena_release:llbuild3.TaskRequest.rule)
  if (details_case() == kRule) {
    clear_has_details();
    auto* temp = _impl_.details_.rule_;
    _impl_.details_.rule_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TaskRequest::unsafe_arena_set_allocated_rule(::llbuild3::TaskRuleRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_details();
  if (value) {
    set_has_rule();
    _impl_.details_.rule_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskRequest.rule)
}
inline ::llbuild3::TaskRuleRequest* TaskRequest::_internal_mutable_rule() {
  if (details_case() != kRule) {
    clear_details();
    set_has_rule();
    _impl_.details_.rule_ =
        ::google::protobuf::Message::DefaultConstruct<::llbuild3::TaskRuleRequest>(GetArena());
  }
  return _impl_.details_.rule_;
}
inline ::llbuild3::TaskRuleRequest* TaskRequest::mutable_rule() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::llbuild3::TaskRuleRequest* _msg = _internal_mutable_rule();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskRequest.rule)
  return _msg;
}

// .llbuild3.TaskActionRequest action = 4;
inline bool TaskRequest::has_action() const {
  return details_case() == kAction;
}
inline bool TaskRequest::_internal_has_action() const {
  return details_case() == kAction;
}
inline void TaskRequest::set_has_action() {
  _impl_._oneof_case_[0] = kAction;
}
inline void TaskRequest::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (details_case() == kAction) {
    if (GetArena() == nullptr) {
      delete _impl_.details_.action_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.details_.action_);
    }
    clear_has_details();
  }
}
inline ::llbuild3::TaskActionRequest* TaskRequest::release_action() {
  // @@protoc_insertion_point(field_release:llbuild3.TaskRequest.action)
  if (details_case() == kAction) {
    clear_has_details();
    auto* temp = _impl_.details_.action_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.details_.action_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::llbuild3::TaskActionRequest& TaskRequest::_internal_action() const {
  return details_case() == kAction ? *_impl_.details_.action_ : reinterpret_cast<::llbuild3::TaskActionRequest&>(::llbuild3::_TaskActionRequest_default_instance_);
}
inline const ::llbuild3::TaskActionRequest& TaskRequest::action() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskRequest.action)
  return _internal_action();
}
inline ::llbuild3::TaskActionRequest* TaskRequest::unsafe_arena_release_action() {
  // @@protoc_insertion_point(field_unsafe_arena_release:llbuild3.TaskRequest.action)
  if (details_case() == kAction) {
    clear_has_details();
    auto* temp = _impl_.details_.action_;
    _impl_.details_.action_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TaskRequest::unsafe_arena_set_allocated_action(::llbuild3::TaskActionRequest* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_details();
  if (value) {
    set_has_action();
    _impl_.details_.action_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskRequest.action)
}
inline ::llbuild3::TaskActionRequest* TaskRequest::_internal_mutable_action() {
  if (details_case() != kAction) {
    clear_details();
    set_has_action();
    _impl_.details_.action_ =
        ::google::protobuf::Message::DefaultConstruct<::llbuild3::TaskActionRequest>(GetArena());
  }
  return _impl_.details_.action_;
}
inline ::llbuild3::TaskActionRequest* TaskRequest::mutable_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::llbuild3::TaskActionRequest* _msg = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskRequest.action)
  return _msg;
}

inline bool TaskRequest::has_details() const {
  return details_case() != DETAILS_NOT_SET;
}
inline void TaskRequest::clear_has_details() {
  _impl_._oneof_case_[0] = DETAILS_NOT_SET;
}
inline TaskRequest::DetailsCase TaskRequest::details_case() const {
  return TaskRequest::DetailsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TaskTransitionKey

// .llbuild3.TaskContext ctx = 1;
inline bool TaskTransitionKey::has_ctx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ctx_ != nullptr);
  return value;
}
inline const ::llbuild3::TaskContext& TaskTransitionKey::_internal_ctx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::llbuild3::TaskContext* p = _impl_.ctx_;
  return p != nullptr ? *p : reinterpret_cast<const ::llbuild3::TaskContext&>(::llbuild3::_TaskContext_default_instance_);
}
inline const ::llbuild3::TaskContext& TaskTransitionKey::ctx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskTransitionKey.ctx)
  return _internal_ctx();
}
inline void TaskTransitionKey::unsafe_arena_set_allocated_ctx(::llbuild3::TaskContext* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ctx_);
  }
  _impl_.ctx_ = reinterpret_cast<::llbuild3::TaskContext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskTransitionKey.ctx)
}
inline ::llbuild3::TaskContext* TaskTransitionKey::release_ctx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::TaskContext* released = _impl_.ctx_;
  _impl_.ctx_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::llbuild3::TaskContext* TaskTransitionKey::unsafe_arena_release_ctx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:llbuild3.TaskTransitionKey.ctx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::TaskContext* temp = _impl_.ctx_;
  _impl_.ctx_ = nullptr;
  return temp;
}
inline ::llbuild3::TaskContext* TaskTransitionKey::_internal_mutable_ctx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ctx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::llbuild3::TaskContext>(GetArena());
    _impl_.ctx_ = reinterpret_cast<::llbuild3::TaskContext*>(p);
  }
  return _impl_.ctx_;
}
inline ::llbuild3::TaskContext* TaskTransitionKey::mutable_ctx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::llbuild3::TaskContext* _msg = _internal_mutable_ctx();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskTransitionKey.ctx)
  return _msg;
}
inline void TaskTransitionKey::set_allocated_ctx(::llbuild3::TaskContext* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ctx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ctx_ = reinterpret_cast<::llbuild3::TaskContext*>(value);
  // @@protoc_insertion_point(field_set_allocated:llbuild3.TaskTransitionKey.ctx)
}

// .llbuild3.Signature signature = 2;
inline bool TaskTransitionKey::has_signature() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.signature_ != nullptr);
  return value;
}
inline const ::llbuild3::Signature& TaskTransitionKey::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::llbuild3::Signature* p = _impl_.signature_;
  return p != nullptr ? *p : reinterpret_cast<const ::llbuild3::Signature&>(::llbuild3::_Signature_default_instance_);
}
inline const ::llbuild3::Signature& TaskTransitionKey::signature() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskTransitionKey.signature)
  return _internal_signature();
}
inline void TaskTransitionKey::unsafe_arena_set_allocated_signature(::llbuild3::Signature* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signature_);
  }
  _impl_.signature_ = reinterpret_cast<::llbuild3::Signature*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskTransitionKey.signature)
}
inline ::llbuild3::Signature* TaskTransitionKey::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::llbuild3::Signature* released = _impl_.signature_;
  _impl_.signature_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::llbuild3::Signature* TaskTransitionKey::unsafe_arena_release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:llbuild3.TaskTransitionKey.signature)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::llbuild3::Signature* temp = _impl_.signature_;
  _impl_.signature_ = nullptr;
  return temp;
}
inline ::llbuild3::Signature* TaskTransitionKey::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::llbuild3::Signature>(GetArena());
    _impl_.signature_ = reinterpret_cast<::llbuild3::Signature*>(p);
  }
  return _impl_.signature_;
}
inline ::llbuild3::Signature* TaskTransitionKey::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::llbuild3::Signature* _msg = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskTransitionKey.signature)
  return _msg;
}
inline void TaskTransitionKey::set_allocated_signature(::llbuild3::Signature* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.signature_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.signature_ = reinterpret_cast<::llbuild3::Signature*>(value);
  // @@protoc_insertion_point(field_set_allocated:llbuild3.TaskTransitionKey.signature)
}

// .llbuild3.TaskInputs inputs = 3;
inline bool TaskTransitionKey::has_inputs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inputs_ != nullptr);
  return value;
}
inline const ::llbuild3::TaskInputs& TaskTransitionKey::_internal_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::llbuild3::TaskInputs* p = _impl_.inputs_;
  return p != nullptr ? *p : reinterpret_cast<const ::llbuild3::TaskInputs&>(::llbuild3::_TaskInputs_default_instance_);
}
inline const ::llbuild3::TaskInputs& TaskTransitionKey::inputs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskTransitionKey.inputs)
  return _internal_inputs();
}
inline void TaskTransitionKey::unsafe_arena_set_allocated_inputs(::llbuild3::TaskInputs* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inputs_);
  }
  _impl_.inputs_ = reinterpret_cast<::llbuild3::TaskInputs*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskTransitionKey.inputs)
}
inline ::llbuild3::TaskInputs* TaskTransitionKey::release_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::llbuild3::TaskInputs* released = _impl_.inputs_;
  _impl_.inputs_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::llbuild3::TaskInputs* TaskTransitionKey::unsafe_arena_release_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:llbuild3.TaskTransitionKey.inputs)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::llbuild3::TaskInputs* temp = _impl_.inputs_;
  _impl_.inputs_ = nullptr;
  return temp;
}
inline ::llbuild3::TaskInputs* TaskTransitionKey::_internal_mutable_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inputs_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::llbuild3::TaskInputs>(GetArena());
    _impl_.inputs_ = reinterpret_cast<::llbuild3::TaskInputs*>(p);
  }
  return _impl_.inputs_;
}
inline ::llbuild3::TaskInputs* TaskTransitionKey::mutable_inputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::llbuild3::TaskInputs* _msg = _internal_mutable_inputs();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskTransitionKey.inputs)
  return _msg;
}
inline void TaskTransitionKey::set_allocated_inputs(::llbuild3::TaskInputs* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inputs_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.inputs_ = reinterpret_cast<::llbuild3::TaskInputs*>(value);
  // @@protoc_insertion_point(field_set_allocated:llbuild3.TaskTransitionKey.inputs)
}

// -------------------------------------------------------------------

// TaskTransitionValue

// .llbuild3.TaskNextState state = 1;
inline bool TaskTransitionValue::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline const ::llbuild3::TaskNextState& TaskTransitionValue::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::llbuild3::TaskNextState* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::llbuild3::TaskNextState&>(::llbuild3::_TaskNextState_default_instance_);
}
inline const ::llbuild3::TaskNextState& TaskTransitionValue::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskTransitionValue.state)
  return _internal_state();
}
inline void TaskTransitionValue::unsafe_arena_set_allocated_state(::llbuild3::TaskNextState* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::llbuild3::TaskNextState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:llbuild3.TaskTransitionValue.state)
}
inline ::llbuild3::TaskNextState* TaskTransitionValue::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::TaskNextState* released = _impl_.state_;
  _impl_.state_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::llbuild3::TaskNextState* TaskTransitionValue::unsafe_arena_release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:llbuild3.TaskTransitionValue.state)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::llbuild3::TaskNextState* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::llbuild3::TaskNextState* TaskTransitionValue::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::llbuild3::TaskNextState>(GetArena());
    _impl_.state_ = reinterpret_cast<::llbuild3::TaskNextState*>(p);
  }
  return _impl_.state_;
}
inline ::llbuild3::TaskNextState* TaskTransitionValue::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::llbuild3::TaskNextState* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskTransitionValue.state)
  return _msg;
}
inline void TaskTransitionValue::set_allocated_state(::llbuild3::TaskNextState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.state_ = reinterpret_cast<::llbuild3::TaskNextState*>(value);
  // @@protoc_insertion_point(field_set_allocated:llbuild3.TaskTransitionValue.state)
}

// repeated .llbuild3.TaskRequest requests = 2;
inline int TaskTransitionValue::_internal_requests_size() const {
  return _internal_requests().size();
}
inline int TaskTransitionValue::requests_size() const {
  return _internal_requests_size();
}
inline void TaskTransitionValue::clear_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requests_.Clear();
}
inline ::llbuild3::TaskRequest* TaskTransitionValue::mutable_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:llbuild3.TaskTransitionValue.requests)
  return _internal_mutable_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>* TaskTransitionValue::mutable_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:llbuild3.TaskTransitionValue.requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_requests();
}
inline const ::llbuild3::TaskRequest& TaskTransitionValue::requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:llbuild3.TaskTransitionValue.requests)
  return _internal_requests().Get(index);
}
inline ::llbuild3::TaskRequest* TaskTransitionValue::add_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::llbuild3::TaskRequest* _add = _internal_mutable_requests()->Add();
  // @@protoc_insertion_point(field_add:llbuild3.TaskTransitionValue.requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>& TaskTransitionValue::requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:llbuild3.TaskTransitionValue.requests)
  return _internal_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>&
TaskTransitionValue::_internal_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requests_;
}
inline ::google::protobuf::RepeatedPtrField<::llbuild3::TaskRequest>*
TaskTransitionValue::_internal_mutable_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.requests_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace llbuild3


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_llbuild3_2fEngineInternal_2eproto_2epb_2eh
